---
- name: Copy provider config
  copy:
    src: files/provider.tf
    dest: "{{ playbook_dir }}/tf/provider.tf"
    owner: root
    group: root
    mode: "0644"

- name: Create terraform credentials file
  template:
    src: credentials.auto.tfvars.j2
    dest: "{{ playbook_dir }}/tf/credentials.auto.tfvars"
    owner: root
    group: root
    mode: "0644"

- name: Copy cloud metadata config
  copy:
    src: files/cloud_metadata_cfg.yaml
    dest: "{{ playbook_dir }}/tf/cloud_metadata_cfg.yaml"
    owner: root
    group: root
    mode: "0644"

- name: Substitute cloud_init userdata
  template:
    src: cloud_userdata_cfg.yaml.j2
    dest: "{{ playbook_dir }}/tf/cloud_userdata_cfg.yaml"

- name: Substitute resources tf
  template:
    src: terraform_vm_resources.tf.j2
    dest: "{{ playbook_dir }}/tf/vm.tf"

- name: Init Terraform
  shell: |
    cd {{ playbook_dir }}/tf;
    terraform init
  when: (operation == "init")
  register: init

- name: "Display output: Init Terraform"
  debug:
    msg: "{{ init.stdout }}"
  when: (operation == "init")

- name: Create resources - Plan
  shell: |
    cd {{ playbook_dir }}/tf;
    terraform workspace new {{ env }}
    terraform workspace select {{ env }}
    terraform plan -out=plan.tfplan;
  when: (operation == "create-plan")
  register: create_plan

- name: "Display output: Create resources - Plan"
  debug:
    msg: "{{ create_plan.stdout }}"
  when: (operation == "create-plan")

- name: Create resources
  shell: |
    cd {{ playbook_dir }}/tf;
    terraform workspace select {{ env }}
    terraform apply plan.tfplan
  when: (operation == "create")
  register: create

- name: "Display output: Create resources"
  debug:
    msg: "{{ create.stdout }}"
  when: (operation == "create")

- name: Destroy resources
  shell: |
    cd {{ playbook_dir }}/tf;
    terraform workspace new {{ env }}
    terraform workspace select {{ env }}
    terraform destroy -auto-approve
  when: (operation == "destroy")
  register: destroy

- name: "Display output: Destroy resources"
  debug:
    msg: "{{ destroy.stdout }}"
  when: (operation == "destroy")
